user  nginx;

# Defines the number of worker processes. The optimal value depends on the number of CPU cores,
# the number of hard disk drives that store data, and load pattern. 
# Setting it to the number of available CPU cores
worker_processes  $LCP_CPU;

error_log  /var/log/nginx/error.log debug;
pid        /var/run/nginx.pid;

events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process
    worker_connections  $WORKER_CONNECTIONS;
}
# Provides the configuration file context in which the stream server directives are specified.
stream {
  upstream transport {
    server $SERVICE_ELASTICSEARCH_ID:9300;
  }

  server {
    listen 9300;
    proxy_pass transport;
  }
}

http {
    include       /etc/nginx/mime.types;
    # Defines the default MIME type of a response
    default_type  application/octet-stream;
    # Enables or disables emitting nginx version on error pages and in the “Server” response header field.
    server_tokens   off;
    # Enables or disables the use of sendfile().
    sendfile        on;
    # Sets a timeout during which a keep-alive client connection will stay open on the server side.
    keepalive_timeout  $KEEP_ALIVE_TIMEOUT;
    
    # Enable compression
    gzip  on;
    # Enables or disables inserting the “Vary: Accept-Encoding” response header field
    gzip_vary on;
    # By default, NGINX does not compress responses to proxied requests
    # To configure compression of these responses, use the gzip_proxied directive
    gzip_proxied any;
    # Sets a gzip compression level of a response. Acceptable values are in the range from 1 to 9.
    gzip_comp_level 6;
    # To compress responses with other MIME types.
    gzip_types  text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    # Sets the bucket size for the server names hash tables
    server_names_hash_bucket_size 64;
    #Sets the maximum allowed size of the client request body, specified in the “Content-Length” request header field.
    client_max_body_size 0;

    upstream elasticsearch {
      # Service ID for Elasticsearch deployed 
      server $SERVICE_ELASTICSEARCH_ID:9200;
    }

    server {
        listen 80 default_server;
        # Sets the maximum number and size of buffers used for reading large client request header.
        large_client_header_buffers 4 32k;

      location / {
        # Allow an IP to be enabled to reach the server
        allow $WHITELISTED_IP;
        deny all;

        proxy_pass http://elasticsearch;
      }

      location /health {
        stub_status on;
        # Allows CIDR block to GCP healtcheck
        allow $HEALTH_CHECK_CIDR_IP;
        deny all;
      }

    }

    # Defines trusted addresses that are known to send correct replacement addresses.
    set_real_ip_from 10.0.0.0/0;
    # Defines the request header field whose value will be used to replace the client address.
    real_ip_header X-Forwarded-For;
    # If recursive search is enabled, the original client address that matches one of 
    # the trusted addresses is replaced by the last non-trusted address sent in the request header field.
    real_ip_recursive on;
}
